1) APP.JS
--------------
import './App.css';
import 'bootstrap/dist/css/bootstrap.min.css';
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import ProductList from './Components/ProductList';
import AddProduct from './Components/AddProduct';
import EditProduct from './Components/EditProduct';
function App() {
  return (
        <BrowserRouter>
      <Routes>
        <Route path="/" element={<ProductList />} />
        <Route path="/create" element={<AddProduct />} />
        <Route path="/edit/:id" element={<EditProduct />} />
      </Routes>
    </BrowserRouter>
  );
}

export default App;

2) productlist.js
--------------------------
// frontend/src/ProductList.js

import React, { useEffect, useState } from 'react';
import axios from 'axios';
import { Link } from 'react-router-dom';

function ProductList() {
  const [products, setProducts] = useState([]);

  useEffect(() => {
    axios.get('http://localhost:3001/products')
      .then(res => setProducts(res.data))
      .catch(err => console.log(err));
  }, []);

  const handleDelete = (id) => {
    if (window.confirm("Are you sure?")) {
      axios.delete(`http://localhost:3001/products/${id}`)
        .then(() => window.location.reload());
    }
  };

  return (
    <div className="container mt-4">
      <Link to="/create" className="btn btn-primary mb-3">Add Product</Link>
      <table className="table table-bordered">
        <thead>
          <tr>
            <th>Name</th>
            <th>SKU</th>
            <th>Stock</th>
            <th>Image</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          {products.map(p => (
            <tr key={p._id}>
              <td>{p.name}</td>
              <td>{p.sku}</td>
              <td>{p.availableStock}</td>
              <td> <img 
    src={`http://localhost:3001/uploads/${p.image}`} 
    alt="product" 
    width="50" 
  /></td>
              <td>
                <Link to={`/edit/${p._id}`} className="btn btn-sm btn-warning me-2">Edit</Link>
                <button onClick={() => handleDelete(p._id)} className="btn btn-sm btn-danger">Delete</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
}

export default ProductList;

3) ADD product.js
---------------------
// frontend/src/AddProduct.js

import React, { useState } from 'react';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';

function AddProduct() {
  const [name, setName] = useState('');
  const [sku, setSku] = useState('');
  const [availableStock, setAvailableStock] = useState('');
  const [image, setImage] = useState(null); // File input
  const navigate = useNavigate();

  const handleSubmit = (e) => {
    e.preventDefault();

    // Validate fields (optional)
    if (!name || !sku || !availableStock || !image) {
      alert('All fields are required');
      return;
    }

    const formData = new FormData();
    formData.append('name', name);
    formData.append('sku', sku);
    formData.append('availableStock', availableStock);
    formData.append('image', image); // File binary

    axios.post('http://localhost:3001/products', formData)
      .then(() => {
        alert("Product added successfully");
        navigate('/');
      })
      .catch(err => {
        console.log(err);
        alert("Something went wrong");
      });
  };

  return (
    <div className="container mt-5">
      <h2 className="mb-4">Add New Product</h2>
      <form onSubmit={handleSubmit} encType="multipart/form-data">
        <div className="mb-3">
          <label className="form-label">Product Name</label>
          <input 
            type="text" 
            className="form-control" 
            placeholder="Enter product name"
            value={name}
            onChange={(e) => setName(e.target.value)} 
          />
        </div>
        <div className="mb-3">
          <label className="form-label">SKU</label>
          <input 
            type="text" 
            className="form-control" 
            placeholder="Enter SKU"
            value={sku}
            onChange={(e) => setSku(e.target.value)} 
          />
        </div>
        <div className="mb-3">
          <label className="form-label">Available Stock</label>
          <input 
            type="number" 
            className="form-control" 
            placeholder="Enter stock quantity"
            value={availableStock}
            onChange={(e) => setAvailableStock(e.target.value)} 
          />
        </div>
        <div className="mb-4">
          <label className="form-label">Product Image</label>
          <input 
            type="file" 
            className="form-control"
            onChange={(e) => setImage(e.target.files[0])} 
            accept="image/*"
          />
        </div>
        <button type="submit" className="btn btn-primary">Add Product</button>
      </form>
    </div>
  );
}

export default AddProduct;


4)EDIT product.js
-------------------------
// frontend/src/EditProduct.js

import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { useParams, useNavigate } from 'react-router-dom';

function EditProduct() {
  const { id } = useParams();
  const navigate = useNavigate();

  const [name, setName] = useState('');
  const [sku, setSku] = useState('');
  const [availableStock, setAvailableStock] = useState('');
  const [image, setImage] = useState(null);

  // Load existing product data
  useEffect(() => {
    axios.get('http://localhost:3001/products')
      .then(res => {
        const product = res.data.find(p => p._id === id);
        if (product) {
          setName(product.name);
          setSku(product.sku);
          setAvailableStock(product.availableStock);
        }
      })
      .catch(err => console.log(err));
  }, [id]);

  const handleUpdate = (e) => {
    e.preventDefault();
    const formData = new FormData();
    formData.append('name', name);
    formData.append('sku', sku);
    formData.append('availableStock', availableStock);
    if (image) {
      formData.append('image', image);
    }

    axios.put(`http://localhost:3001/products/${id}`, formData)
      .then(() => navigate('/'))
      .catch(err => console.log(err));
  };

  return (
    <div className="container mt-5">
      <h2>Edit Product</h2>
      <form onSubmit={handleUpdate} encType="multipart/form-data">
        <input className="form-control mb-2" type="text" value={name} onChange={e => setName(e.target.value)} placeholder="Product Name" />
        <input className="form-control mb-2" type="text" value={sku} onChange={e => setSku(e.target.value)} placeholder="SKU" />
        <input className="form-control mb-2" type="number" value={availableStock} onChange={e => setAvailableStock(e.target.value)} placeholder="Available Stock" />
        <input className="form-control mb-3" type="file" onChange={e => setImage(e.target.files[0])} />
        <button className="btn btn-primary">Update Product</button>
      </form>
    </div>
  );
}

export default EditProduct;

5)models/product.js(schema )
-----------------------------------
const mongoose = require("mongoose");

const ProductSchema = new mongoose.Schema({
  name: String,
  sku: String,
  availableStock: Number,
  image: String
});

module.exports = mongoose.model("products", ProductSchema);

6)index.js(server)
--------------------

const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const multer = require('multer');
const path = require('path');
const ProductModel = require('./models/product'); 


const app = express();

app.use(cors());
app.use(express.json());
app.use('/uploads', express.static('uploads'));

mongoose.connect("mongodb://localhost:27017/mernexam", {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
.then(() => console.log("MongoDB connected"))
.catch(err => console.log(err));

// ✅ Multer setup
const storage = multer.diskStorage({
  destination: (req, file, cb) => cb(null, 'uploads/'),
  filename: (req, file, cb) => cb(null, Date.now() + '-' + file.originalname)
});
const upload = multer({ storage: storage });

// ✅ Create Product
app.post("/products", upload.single("image"), async (req, res) => {
  const { name, sku, availableStock } = req.body;
  const image = req.file?.filename;
  const product = await ProductModel.create({ name, sku, availableStock, image });
  res.json(product);
});

// ✅ Get All Products
app.get("/products", async (req, res) => {
  const products = await ProductModel.find();
  res.json(products);
});

// ✅ Update Product
app.put("/products/:id", upload.single("image"), async (req, res) => {
  const update = req.body;
  if (req.file) update.image = req.file.filename;
  const product = await ProductModel.findByIdAndUpdate(req.params.id, update, { new: true });
  res.json(product);
});

// ✅ Delete Product
app.delete("/products/:id", async (req, res) => {
  await ProductModel.findByIdAndDelete(req.params.id);
  res.json({ message: "Deleted" });
});

app.listen(3001, () => {
  console.log("server is running");
});



