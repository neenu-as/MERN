import React, { useEffect, useState } from "react";
import axios from "axios";
import { Link } from "react-router-dom";

export default function Home() {
  const [products, setProducts] = useState([]);
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 3; // Show only 3 products per page

  useEffect(() => {
    axios
      .get("http://localhost:5000/api/products")
      .then((res) => setProducts(res.data))
      .catch((err) => console.log(err));
  }, []);

  const handleDelete = (id) => {
    axios
      .delete(`http://localhost:5000/api/products/${id}`)
      .then(() => setProducts(products.filter((p) => p._id !== id)));
  };

  // STEP 1: Calculate start & end index for slicing
  const startIndex = (currentPage - 1) * itemsPerPage;
  const endIndex = startIndex + itemsPerPage;

  // STEP 2: Slice the products for the current page
  const currentProducts = products.slice(startIndex, endIndex);

  // STEP 3: Total number of pages
  const totalPages = Math.ceil(products.length / itemsPerPage);

  return (
    <div style={{ padding: "20px" }}>
      <h2>Product List</h2>
      <Link to="/create">
        <button>Add Product</button>
      </Link>

      <table border="1" cellPadding="10" style={{ marginTop: "20px" }}>
        <thead>
          <tr>
            <th>ID</th>
            <th>Product Name</th>
            <th>Image</th>
            <th>Quantity</th>
            <th>Rate</th>
            <th>Date</th>
            <th>Status</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody>
          {currentProducts.map((p, index) => (
            <tr key={p._id}>
              <td>{startIndex + index + 1}</td>
              <td>{p.productName}</td>
              <td>
                {p.image && (
                  <img
                    src={`http://localhost:5000${p.image}`}
                    alt=""
                    width="50"
                  />
                )}
              </td>
              <td>{p.quantity}</td>
              <td>{p.rate}</td>
              <td>{new Date(p.date).toLocaleDateString()}</td>
              <td>{p.status}</td>
              <td>
                <Link to={`/edit/${p._id}`}>
                  <button>Edit</button>
                </Link>
                <button
                  onClick={() => handleDelete(p._id)}
                  style={{ marginLeft: "10px" }}
                >
                  Delete
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      {/* STEP 4: Pagination Controls */}
      <div style={{ marginTop: "20px" }}>
        {Array.from({ length: totalPages }, (_, index) => (
          <button
            key={index}
            style={{
              margin: "5px",
              backgroundColor: currentPage === index + 1 ? "lightblue" : "",
            }}
            onClick={() => setCurrentPage(index + 1)}
          >
            {index + 1}
          </button>
        ))}
      </div>
    </div>
  );
}
